fn (%data: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 1000), float32] {
  %0 = nn.conv2d(%data, meta[relay.Constant][0] /* ty=Tensor[(64, 3, 7, 7), float32] */, strides=[2, 2], padding=[3, 3, 3, 3], channels=64, kernel_size=[7, 7]) /* ty=Tensor[(1, 64, 112, 112), float32] */;
  %1 = add(%0, meta[relay.Constant][1] /* ty=Tensor[(64, 1, 1), float32] */) /* ty=Tensor[(1, 64, 112, 112), float32] */;
  %2 = nn.relu(%1) /* ty=Tensor[(1, 64, 112, 112), float32] */;
  %3 = nn.max_pool2d(%2, pool_size=[3, 3], strides=[2, 2], padding=[1, 1, 1, 1]) /* ty=Tensor[(1, 64, 56, 56), float32] */;
  %4 = reshape(%3, newshape=[1, 1, 4, 16, 56, 56]) /* ty=Tensor[(1, 1, 4, 16, 56, 56), float32] */;
  %5 = transpose(%4, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %6 = annotation.stop_fusion(%5) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %7 = multiply(%6, 16f /* ty=float32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %8 = round(%7) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %9 = clip(%8, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %10 = cast(%9, dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %11 = annotation.stop_fusion(%10) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %12 = annotation.stop_fusion(%5) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %13 = multiply(%12, 16f /* ty=float32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %14 = round(%13) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %15 = clip(%14, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), float32] */;
  %16 = cast(%15, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %17 = reshape(meta[relay.Constant][2] /* ty=Tensor[(64, 64, 3, 3), int8] */, newshape=[4, 16, 4, 16, 3, 3]) /* ty=Tensor[(4, 16, 4, 16, 3, 3), int8] */;
  %18 = transpose(%17, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(4, 4, 3, 3, 16, 16), int8] */;
  %19 = nn.conv2d(%16, %18, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %20 = reshape(meta[relay.Constant][3] /* ty=Tensor[(64, 1, 1), int32] */, newshape=[4, 16, 1, 1, 1]) /* ty=Tensor[(4, 16, 1, 1, 1), int32] */;
  %21 = transpose(%20, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %22 = broadcast_to(%21, meta[relay.attrs.InitOpAttrs][0]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %23 = add(%19, %22) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %24 = nn.relu(%23) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %25 = add(%24, 64 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %26 = right_shift(%25, 7 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %27 = clip(%26, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %28 = cast(%27, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %29 = copy(%28) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %30 = annotation.stop_fusion(%29) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %31 = reshape(meta[relay.Constant][4] /* ty=Tensor[(64, 64, 3, 3), int8] */, newshape=[4, 16, 4, 16, 3, 3]) /* ty=Tensor[(4, 16, 4, 16, 3, 3), int8] */;
  %32 = transpose(%31, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(4, 4, 3, 3, 16, 16), int8] */;
  %33 = nn.conv2d(%30, %32, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %34 = reshape(meta[relay.Constant][5] /* ty=Tensor[(64, 1, 1), int32] */, newshape=[4, 16, 1, 1, 1]) /* ty=Tensor[(4, 16, 1, 1, 1), int32] */;
  %35 = transpose(%34, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %36 = broadcast_to(%35, meta[relay.attrs.InitOpAttrs][1]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %37 = add(%33, %36) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %38 = add(%37, 32 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %39 = right_shift(%38, 6 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %40 = clip(%39, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %41 = cast(%40, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %42 = copy(%41) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %43 = annotation.stop_fusion(%42) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %44 = cast(%43, dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %45 = add(%11, %44) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %46 = nn.relu(%45) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %47 = clip(%46, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %48 = cast(%47, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %49 = copy(%48) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %50 = annotation.stop_fusion(%49) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %51 = cast(%50, dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %52 = cast(%47, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %53 = copy(%52) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %54 = annotation.stop_fusion(%53) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %55 = reshape(meta[relay.Constant][6] /* ty=Tensor[(64, 64, 3, 3), int8] */, newshape=[4, 16, 4, 16, 3, 3]) /* ty=Tensor[(4, 16, 4, 16, 3, 3), int8] */;
  %56 = transpose(%55, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(4, 4, 3, 3, 16, 16), int8] */;
  %57 = nn.conv2d(%54, %56, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %58 = reshape(meta[relay.Constant][7] /* ty=Tensor[(64, 1, 1), int32] */, newshape=[4, 16, 1, 1, 1]) /* ty=Tensor[(4, 16, 1, 1, 1), int32] */;
  %59 = transpose(%58, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %60 = broadcast_to(%59, meta[relay.attrs.InitOpAttrs][2]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %61 = add(%57, %60) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %62 = nn.relu(%61) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %63 = add(%62, 256 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %64 = right_shift(%63, 9 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %65 = clip(%64, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %66 = cast(%65, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %67 = copy(%66) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %68 = annotation.stop_fusion(%67) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %69 = reshape(meta[relay.Constant][8] /* ty=Tensor[(64, 64, 3, 3), int8] */, newshape=[4, 16, 4, 16, 3, 3]) /* ty=Tensor[(4, 16, 4, 16, 3, 3), int8] */;
  %70 = transpose(%69, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(4, 4, 3, 3, 16, 16), int8] */;
  %71 = nn.conv2d(%68, %70, padding=[1, 1, 1, 1], channels=64, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %72 = reshape(meta[relay.Constant][9] /* ty=Tensor[(64, 1, 1), int32] */, newshape=[4, 16, 1, 1, 1]) /* ty=Tensor[(4, 16, 1, 1, 1), int32] */;
  %73 = transpose(%72, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %74 = broadcast_to(%73, meta[relay.attrs.InitOpAttrs][3]) /* ty=Tensor[(4, 1, 1, 1, 16), int32] */;
  %75 = add(%71, %74) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %76 = add(%75, 32 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %77 = right_shift(%76, 6 /* ty=int32 */) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %78 = clip(%77, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %79 = cast(%78, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %80 = copy(%79) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %81 = annotation.stop_fusion(%80) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %82 = cast(%81, dtype="int32") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %83 = add(%51, %82) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %84 = nn.relu(%83) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %85 = clip(%84, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int32] */;
  %86 = cast(%85, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %87 = copy(%86) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %88 = annotation.stop_fusion(%87) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %89 = reshape(meta[relay.Constant][10] /* ty=Tensor[(128, 64, 1, 1), int8] */, newshape=[8, 16, 4, 16, 1, 1]) /* ty=Tensor[(8, 16, 4, 16, 1, 1), int8] */;
  %90 = transpose(%89, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(8, 4, 1, 1, 16, 16), int8] */;
  %91 = nn.conv2d(%88, %90, strides=[2, 2], padding=[0, 0, 0, 0], channels=128, kernel_size=[1, 1], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %92 = reshape(meta[relay.Constant][11] /* ty=Tensor[(128, 1, 1), int32] */, newshape=[8, 16, 1, 1, 1]) /* ty=Tensor[(8, 16, 1, 1, 1), int32] */;
  %93 = transpose(%92, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %94 = broadcast_to(%93, meta[relay.attrs.InitOpAttrs][4]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %95 = add(%91, %94) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %96 = add(%95, 64 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %97 = right_shift(%96, 7 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %98 = clip(%97, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %99 = cast(%98, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %100 = copy(%99) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %101 = annotation.stop_fusion(%100) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %102 = cast(%101, dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %103 = cast(%85, dtype="int8") /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %104 = copy(%103) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %105 = annotation.stop_fusion(%104) /* ty=Tensor[(1, 4, 56, 56, 1, 16), int8] */;
  %106 = reshape(meta[relay.Constant][12] /* ty=Tensor[(128, 64, 3, 3), int8] */, newshape=[8, 16, 4, 16, 3, 3]) /* ty=Tensor[(8, 16, 4, 16, 3, 3), int8] */;
  %107 = transpose(%106, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(8, 4, 3, 3, 16, 16), int8] */;
  %108 = nn.conv2d(%105, %107, strides=[2, 2], padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %109 = reshape(meta[relay.Constant][13] /* ty=Tensor[(128, 1, 1), int32] */, newshape=[8, 16, 1, 1, 1]) /* ty=Tensor[(8, 16, 1, 1, 1), int32] */;
  %110 = transpose(%109, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %111 = broadcast_to(%110, meta[relay.attrs.InitOpAttrs][5]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %112 = add(%108, %111) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %113 = nn.relu(%112) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %114 = add(%113, 256 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %115 = right_shift(%114, 9 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %116 = clip(%115, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %117 = cast(%116, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %118 = copy(%117) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %119 = annotation.stop_fusion(%118) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %120 = reshape(meta[relay.Constant][14] /* ty=Tensor[(128, 128, 3, 3), int8] */, newshape=[8, 16, 8, 16, 3, 3]) /* ty=Tensor[(8, 16, 8, 16, 3, 3), int8] */;
  %121 = transpose(%120, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(8, 8, 3, 3, 16, 16), int8] */;
  %122 = nn.conv2d(%119, %121, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %123 = reshape(meta[relay.Constant][15] /* ty=Tensor[(128, 1, 1), int32] */, newshape=[8, 16, 1, 1, 1]) /* ty=Tensor[(8, 16, 1, 1, 1), int32] */;
  %124 = transpose(%123, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %125 = broadcast_to(%124, meta[relay.attrs.InitOpAttrs][6]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %126 = add(%122, %125) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %127 = add(%126, 64 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %128 = right_shift(%127, 7 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %129 = clip(%128, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %130 = cast(%129, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %131 = copy(%130) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %132 = annotation.stop_fusion(%131) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %133 = cast(%132, dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %134 = add(%102, %133) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %135 = nn.relu(%134) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %136 = clip(%135, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %137 = cast(%136, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %138 = copy(%137) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %139 = annotation.stop_fusion(%138) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %140 = cast(%139, dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %141 = cast(%136, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %142 = copy(%141) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %143 = annotation.stop_fusion(%142) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %144 = reshape(meta[relay.Constant][16] /* ty=Tensor[(128, 128, 3, 3), int8] */, newshape=[8, 16, 8, 16, 3, 3]) /* ty=Tensor[(8, 16, 8, 16, 3, 3), int8] */;
  %145 = transpose(%144, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(8, 8, 3, 3, 16, 16), int8] */;
  %146 = nn.conv2d(%143, %145, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %147 = reshape(meta[relay.Constant][17] /* ty=Tensor[(128, 1, 1), int32] */, newshape=[8, 16, 1, 1, 1]) /* ty=Tensor[(8, 16, 1, 1, 1), int32] */;
  %148 = transpose(%147, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %149 = broadcast_to(%148, meta[relay.attrs.InitOpAttrs][7]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %150 = add(%146, %149) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %151 = nn.relu(%150) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %152 = add(%151, 128 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %153 = right_shift(%152, 8 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %154 = clip(%153, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %155 = cast(%154, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %156 = copy(%155) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %157 = annotation.stop_fusion(%156) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %158 = reshape(meta[relay.Constant][18] /* ty=Tensor[(128, 128, 3, 3), int8] */, newshape=[8, 16, 8, 16, 3, 3]) /* ty=Tensor[(8, 16, 8, 16, 3, 3), int8] */;
  %159 = transpose(%158, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(8, 8, 3, 3, 16, 16), int8] */;
  %160 = nn.conv2d(%157, %159, padding=[1, 1, 1, 1], channels=128, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %161 = reshape(meta[relay.Constant][19] /* ty=Tensor[(128, 1, 1), int32] */, newshape=[8, 16, 1, 1, 1]) /* ty=Tensor[(8, 16, 1, 1, 1), int32] */;
  %162 = transpose(%161, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %163 = broadcast_to(%162, meta[relay.attrs.InitOpAttrs][8]) /* ty=Tensor[(8, 1, 1, 1, 16), int32] */;
  %164 = add(%160, %163) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %165 = add(%164, 64 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %166 = right_shift(%165, 7 /* ty=int32 */) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %167 = clip(%166, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %168 = cast(%167, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %169 = copy(%168) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %170 = annotation.stop_fusion(%169) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %171 = cast(%170, dtype="int32") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %172 = add(%140, %171) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %173 = nn.relu(%172) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %174 = clip(%173, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int32] */;
  %175 = cast(%174, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %176 = copy(%175) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %177 = annotation.stop_fusion(%176) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %178 = reshape(meta[relay.Constant][20] /* ty=Tensor[(256, 128, 1, 1), int8] */, newshape=[16, 16, 8, 16, 1, 1]) /* ty=Tensor[(16, 16, 8, 16, 1, 1), int8] */;
  %179 = transpose(%178, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(16, 8, 1, 1, 16, 16), int8] */;
  %180 = nn.conv2d(%177, %179, strides=[2, 2], padding=[0, 0, 0, 0], channels=256, kernel_size=[1, 1], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %181 = reshape(meta[relay.Constant][21] /* ty=Tensor[(256, 1, 1), int32] */, newshape=[16, 16, 1, 1, 1]) /* ty=Tensor[(16, 16, 1, 1, 1), int32] */;
  %182 = transpose(%181, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %183 = broadcast_to(%182, meta[relay.attrs.InitOpAttrs][9]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %184 = add(%180, %183) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %185 = add(%184, 128 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %186 = right_shift(%185, 8 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %187 = clip(%186, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %188 = cast(%187, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %189 = copy(%188) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %190 = annotation.stop_fusion(%189) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %191 = cast(%190, dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %192 = cast(%174, dtype="int8") /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %193 = copy(%192) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %194 = annotation.stop_fusion(%193) /* ty=Tensor[(1, 8, 28, 28, 1, 16), int8] */;
  %195 = reshape(meta[relay.Constant][22] /* ty=Tensor[(256, 128, 3, 3), int8] */, newshape=[16, 16, 8, 16, 3, 3]) /* ty=Tensor[(16, 16, 8, 16, 3, 3), int8] */;
  %196 = transpose(%195, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(16, 8, 3, 3, 16, 16), int8] */;
  %197 = nn.conv2d(%194, %196, strides=[2, 2], padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %198 = reshape(meta[relay.Constant][23] /* ty=Tensor[(256, 1, 1), int32] */, newshape=[16, 16, 1, 1, 1]) /* ty=Tensor[(16, 16, 1, 1, 1), int32] */;
  %199 = transpose(%198, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %200 = broadcast_to(%199, meta[relay.attrs.InitOpAttrs][10]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %201 = add(%197, %200) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %202 = nn.relu(%201) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %203 = add(%202, 256 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %204 = right_shift(%203, 9 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %205 = clip(%204, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %206 = cast(%205, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %207 = copy(%206) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %208 = annotation.stop_fusion(%207) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %209 = reshape(meta[relay.Constant][24] /* ty=Tensor[(256, 256, 3, 3), int8] */, newshape=[16, 16, 16, 16, 3, 3]) /* ty=Tensor[(16, 16, 16, 16, 3, 3), int8] */;
  %210 = transpose(%209, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(16, 16, 3, 3, 16, 16), int8] */;
  %211 = nn.conv2d(%208, %210, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %212 = reshape(meta[relay.Constant][25] /* ty=Tensor[(256, 1, 1), int32] */, newshape=[16, 16, 1, 1, 1]) /* ty=Tensor[(16, 16, 1, 1, 1), int32] */;
  %213 = transpose(%212, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %214 = broadcast_to(%213, meta[relay.attrs.InitOpAttrs][11]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %215 = add(%211, %214) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %216 = add(%215, 64 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %217 = right_shift(%216, 7 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %218 = clip(%217, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %219 = cast(%218, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %220 = copy(%219) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %221 = annotation.stop_fusion(%220) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %222 = cast(%221, dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %223 = add(%191, %222) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %224 = nn.relu(%223) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %225 = clip(%224, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %226 = cast(%225, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %227 = copy(%226) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %228 = annotation.stop_fusion(%227) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %229 = cast(%228, dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %230 = cast(%225, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %231 = copy(%230) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %232 = annotation.stop_fusion(%231) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %233 = reshape(meta[relay.Constant][26] /* ty=Tensor[(256, 256, 3, 3), int8] */, newshape=[16, 16, 16, 16, 3, 3]) /* ty=Tensor[(16, 16, 16, 16, 3, 3), int8] */;
  %234 = transpose(%233, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(16, 16, 3, 3, 16, 16), int8] */;
  %235 = nn.conv2d(%232, %234, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %236 = reshape(meta[relay.Constant][27] /* ty=Tensor[(256, 1, 1), int32] */, newshape=[16, 16, 1, 1, 1]) /* ty=Tensor[(16, 16, 1, 1, 1), int32] */;
  %237 = transpose(%236, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %238 = broadcast_to(%237, meta[relay.attrs.InitOpAttrs][12]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %239 = add(%235, %238) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %240 = nn.relu(%239) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %241 = add(%240, 128 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %242 = right_shift(%241, 8 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %243 = clip(%242, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %244 = cast(%243, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %245 = copy(%244) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %246 = annotation.stop_fusion(%245) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %247 = reshape(meta[relay.Constant][28] /* ty=Tensor[(256, 256, 3, 3), int8] */, newshape=[16, 16, 16, 16, 3, 3]) /* ty=Tensor[(16, 16, 16, 16, 3, 3), int8] */;
  %248 = transpose(%247, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(16, 16, 3, 3, 16, 16), int8] */;
  %249 = nn.conv2d(%246, %248, padding=[1, 1, 1, 1], channels=256, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %250 = reshape(meta[relay.Constant][29] /* ty=Tensor[(256, 1, 1), int32] */, newshape=[16, 16, 1, 1, 1]) /* ty=Tensor[(16, 16, 1, 1, 1), int32] */;
  %251 = transpose(%250, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %252 = broadcast_to(%251, meta[relay.attrs.InitOpAttrs][13]) /* ty=Tensor[(16, 1, 1, 1, 16), int32] */;
  %253 = add(%249, %252) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %254 = add(%253, 64 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %255 = right_shift(%254, 7 /* ty=int32 */) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %256 = clip(%255, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %257 = cast(%256, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %258 = copy(%257) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %259 = annotation.stop_fusion(%258) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %260 = cast(%259, dtype="int32") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %261 = add(%229, %260) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %262 = nn.relu(%261) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %263 = clip(%262, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int32] */;
  %264 = cast(%263, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %265 = copy(%264) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %266 = annotation.stop_fusion(%265) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %267 = reshape(meta[relay.Constant][30] /* ty=Tensor[(512, 256, 1, 1), int8] */, newshape=[32, 16, 16, 16, 1, 1]) /* ty=Tensor[(32, 16, 16, 16, 1, 1), int8] */;
  %268 = transpose(%267, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(32, 16, 1, 1, 16, 16), int8] */;
  %269 = nn.conv2d(%266, %268, strides=[2, 2], padding=[0, 0, 0, 0], channels=512, kernel_size=[1, 1], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %270 = reshape(meta[relay.Constant][31] /* ty=Tensor[(512, 1, 1), int32] */, newshape=[32, 16, 1, 1, 1]) /* ty=Tensor[(32, 16, 1, 1, 1), int32] */;
  %271 = transpose(%270, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %272 = broadcast_to(%271, meta[relay.attrs.InitOpAttrs][14]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %273 = add(%269, %272) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %274 = add(%273, 32 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %275 = right_shift(%274, 6 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %276 = clip(%275, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %277 = cast(%276, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %278 = copy(%277) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %279 = annotation.stop_fusion(%278) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %280 = cast(%279, dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %281 = cast(%263, dtype="int8") /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %282 = copy(%281) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %283 = annotation.stop_fusion(%282) /* ty=Tensor[(1, 16, 14, 14, 1, 16), int8] */;
  %284 = reshape(meta[relay.Constant][32] /* ty=Tensor[(512, 256, 3, 3), int8] */, newshape=[32, 16, 16, 16, 3, 3]) /* ty=Tensor[(32, 16, 16, 16, 3, 3), int8] */;
  %285 = transpose(%284, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(32, 16, 3, 3, 16, 16), int8] */;
  %286 = nn.conv2d(%283, %285, strides=[2, 2], padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %287 = reshape(meta[relay.Constant][33] /* ty=Tensor[(512, 1, 1), int32] */, newshape=[32, 16, 1, 1, 1]) /* ty=Tensor[(32, 16, 1, 1, 1), int32] */;
  %288 = transpose(%287, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %289 = broadcast_to(%288, meta[relay.attrs.InitOpAttrs][15]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %290 = add(%286, %289) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %291 = nn.relu(%290) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %292 = add(%291, 128 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %293 = right_shift(%292, 8 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %294 = clip(%293, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %295 = cast(%294, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %296 = copy(%295) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %297 = annotation.stop_fusion(%296) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %298 = reshape(meta[relay.Constant][34] /* ty=Tensor[(512, 512, 3, 3), int8] */, newshape=[32, 16, 32, 16, 3, 3]) /* ty=Tensor[(32, 16, 32, 16, 3, 3), int8] */;
  %299 = transpose(%298, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(32, 32, 3, 3, 16, 16), int8] */;
  %300 = nn.conv2d(%297, %299, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %301 = reshape(meta[relay.Constant][35] /* ty=Tensor[(512, 1, 1), int32] */, newshape=[32, 16, 1, 1, 1]) /* ty=Tensor[(32, 16, 1, 1, 1), int32] */;
  %302 = transpose(%301, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %303 = broadcast_to(%302, meta[relay.attrs.InitOpAttrs][16]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %304 = add(%300, %303) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %305 = add(%304, 32 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %306 = right_shift(%305, 6 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %307 = clip(%306, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %308 = cast(%307, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %309 = copy(%308) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %310 = annotation.stop_fusion(%309) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %311 = cast(%310, dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %312 = add(%280, %311) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %313 = nn.relu(%312) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %314 = clip(%313, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %315 = cast(%314, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %316 = copy(%315) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %317 = annotation.stop_fusion(%316) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %318 = cast(%317, dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %319 = cast(%314, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %320 = copy(%319) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %321 = annotation.stop_fusion(%320) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %322 = reshape(meta[relay.Constant][36] /* ty=Tensor[(512, 512, 3, 3), int8] */, newshape=[32, 16, 32, 16, 3, 3]) /* ty=Tensor[(32, 16, 32, 16, 3, 3), int8] */;
  %323 = transpose(%322, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(32, 32, 3, 3, 16, 16), int8] */;
  %324 = nn.conv2d(%321, %323, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %325 = reshape(meta[relay.Constant][37] /* ty=Tensor[(512, 1, 1), int32] */, newshape=[32, 16, 1, 1, 1]) /* ty=Tensor[(32, 16, 1, 1, 1), int32] */;
  %326 = transpose(%325, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %327 = broadcast_to(%326, meta[relay.attrs.InitOpAttrs][17]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %328 = add(%324, %327) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %329 = nn.relu(%328) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %330 = add(%329, 128 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %331 = right_shift(%330, 8 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %332 = clip(%331, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %333 = cast(%332, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %334 = copy(%333) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %335 = annotation.stop_fusion(%334) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %336 = reshape(meta[relay.Constant][38] /* ty=Tensor[(512, 512, 3, 3), int8] */, newshape=[32, 16, 32, 16, 3, 3]) /* ty=Tensor[(32, 16, 32, 16, 3, 3), int8] */;
  %337 = transpose(%336, axes=[0, 2, 4, 5, 1, 3]) /* ty=Tensor[(32, 32, 3, 3, 16, 16), int8] */;
  %338 = nn.conv2d(%335, %337, padding=[1, 1, 1, 1], channels=512, kernel_size=[3, 3], data_layout="NCHW1n16c", kernel_layout="OIHW16o16i", out_dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %339 = reshape(meta[relay.Constant][39] /* ty=Tensor[(512, 1, 1), int32] */, newshape=[32, 16, 1, 1, 1]) /* ty=Tensor[(32, 16, 1, 1, 1), int32] */;
  %340 = transpose(%339, axes=[0, 2, 3, 4, 1]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %341 = broadcast_to(%340, meta[relay.attrs.InitOpAttrs][18]) /* ty=Tensor[(32, 1, 1, 1, 16), int32] */;
  %342 = add(%338, %341) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %343 = add(%342, 8 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %344 = right_shift(%343, 4 /* ty=int32 */) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %345 = clip(%344, a_min=-127f, a_max=127f) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %346 = cast(%345, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %347 = copy(%346) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %348 = annotation.stop_fusion(%347) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %349 = cast(%348, dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %350 = add(%318, %349) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %351 = nn.relu(%350) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %352 = cast(%351, dtype="int8") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %353 = copy(%352) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %354 = annotation.stop_fusion(%353) /* ty=Tensor[(1, 32, 7, 7, 1, 16), int8] */;
  %355 = cast(%354, dtype="int32") /* ty=Tensor[(1, 32, 7, 7, 1, 16), int32] */;
  %356 = transpose(%355, axes=[0, 4, 1, 5, 2, 3]) /* ty=Tensor[(1, 1, 32, 16, 7, 7), int32] */;
  %357 = reshape(%356, newshape=[1, 512, 7, 7]) /* ty=Tensor[(1, 512, 7, 7), int32] */;
  %358 = nn.global_avg_pool2d(%357) /* ty=Tensor[(1, 512, 1, 1), int32] */;
  %359 = nn.batch_flatten(%358) /* ty=Tensor[(1, 512), int32] */;
  %360 = cast(%359, dtype="float32") /* ty=Tensor[(1, 512), float32] */;
  %361 = multiply(%360, 0.0625f /* ty=float32 */) /* ty=Tensor[(1, 512), float32] */;
  %362 = nn.dense(%361, meta[relay.Constant][40] /* ty=Tensor[(1000, 512), float32] */, units=1000) /* ty=Tensor[(1, 1000), float32] */;
  add(%362, meta[relay.Constant][41] /* ty=Tensor[(1000), float32] */) /* ty=Tensor[(1, 1000), float32] */
}

